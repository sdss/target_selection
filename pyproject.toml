[tool.poetry]
name = "sdss-target-selection"
version = "1.3.17"
description = "Code to perform target selection for BHM/MWM using catalogdb"
authors = ["José Sánchez-Gallego <gallegoj@uw.edu>"]
license = "BSD 3-Clause"
readme = "README.md"
homepage = "https://github.com/sdss/target_selection"
repository = "https://github.com/sdss/target_selection"
documentation = "https://sdss-target-selection.readthedocs.io/en/latest/"
keywords = ["astronomy", "software"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "target_selection", from = "python" }
]
include = ["python/target_selection/config/*", "python/target_selection/masks/*"]

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1"
sdssdb = "0.12.2"
sdsstools = "^1.6.0"
click = "^8.0"
astropy = ">=5.0.0"
networkx = "^2.4"
pandas = "^2.0.0"
tables = ">=3.6.1"
matplotlib = "^3.1.1"
healpy = "^1.13.0"
enlighten = "^1.4.0"
polars = "^1"
sdss-pymangle = "^0.9.3"
mocpy = "^0"
pymoc = "^0"
gala = "^1.6.1"
dustmaps = "1.0.10"
pydantic = "^2.8.2"
typing-extensions = ">=4.12.2"
pyarrow = "*"
adbc-driver-postgresql = "*"

[tool.poetry.group.dev.dependencies]
ipython = ">=7.9.0"
doc8 = ">=0.8.0"
ipdb = ">=0.12.3"
pytest = ">=5.2.2"
pytest-cov = ">=2.8.1"
pytest-mock = ">=1.13.0"
pytest-sugar = ">=0.9.2"
coverage = {version = ">=5.0", extras = ["toml"]}
nox = ">=2021.6.12"
ruff = ">=0.5.0"
Sphinx = ">=4.0.0"
sphinx-click = ">=3.0.0"
furo = ">=2021.6.18"
sphinx-autobuild = ">=2021.3.14"
sphinx-copybutton = ">=0.3.3"
myst-parser = ">=0.15"
pandas-stubs = ">=2.2.2.240603"

[tool.poetry.scripts]
target_selection = "target_selection.__main__:target_selection"

[tool.ruff]
line-length = 99
target-version = 'py312'
exclude = ["typings/"]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E722"]
unfixable = ["F841"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "E402"]
"**/cartons/bhm_*.py" = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["target_selection"]
lines-after-imports = 2
section-order = ["future", "standard-library", "typing", "third-party", "sdss", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
typing = ["typing"]
sdss = ["sdsstools", "sdssdb"]

[tool.pytest.ini_options]
addopts = "--cov target_selection --cov-report xml --cov-report html --cov-report term -W ignore"

[tool.coverage.run]
branch = true
include = ["python/target_selection/*"]
omit = [
    "**/__init__.py",
    "**/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "# pragma: no cover"
]

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"
